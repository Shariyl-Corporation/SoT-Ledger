name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:
  deploy:
    env:
      reponame: SoT-Ledger
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: cloudflare warp install
        run: |
          # Add cloudflare gpg key
          curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          
          
          # Add this repo to your apt repositories
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          
          
          # Install
          sudo apt-get update && sudo apt-get install cloudflare-warp
          sudo apt install cloudflare-warp

      - name: cloudflare warp run
        run: |
          # Creds
          sudo sh -c 'echo "
          <dict>
            <key>organization</key><string>${{ secrets.CLOUDFLARE_ORGANIZATION }}</string>
            <key>auth_client_id</key><string>${{ secrets.CLOUDFLARE_AUTH_CLIENT_ID }}</string>
            <key>auth_client_secret</key><string>${{ secrets.CLOUDFLARE_AUTH_CLIENT_SECRET }}</string>
          </dict>
          " > /var/lib/cloudflare-warp/mdm.xml'

          sudo systemctl status warp-svc
          
          # Connect to network
          warp-cli register

         

      - name: warp test
        run: |
          warp-cli status
          warp-cli get-included-routes
          
      - name: sync
        env:
          dest: "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/${{ env.reponame }}/"
        run: |
          echo "${{secrets.DEPLOY_KEY}}" > ~/deploy_key
          chmod 600 ~/deploy_key
          rsync -chav --delete \
            -e 'ssh -i ~/deploy_key -o StrictHostKeyChecking=no' \
            --exclude=.git --exclude=.env --exclude=vendor --exclude=storage ./ ${{env.dest}}

      - name: install packages
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.SSH_USER }}/${{ env.reponame }}
            rm composer.lock
            composer install

      - name: Check the deployed service URL
        uses: jtalk/url-health-check-action@v3
        with:
          # HTTP Health Check for successful deployment testing
          # Check the following URLs one by one sequentially
          url: http://shariyl.cloud/sot-ledger/
          max-attempts: 3 # Optional, defaults to 1
          retry-delay: 3s # Optional, only applicable to max-attempts > 1
